{"version":3,"sources":["../src/sort_wrapper.js"],"names":["define","$","Sortablelist","CustomEvents","Notification","Ajax","SELECTORS","WRAPPER","CARD","moveCard","args","promise","call","methodname","fail","exception","registerEventListeners","root","cardsContainer","find","swipeid","attr","cardsSortable","moveHandlerSelector","getDestinationName","parentElement","afterElement","length","on","EVENTS","DROP","e","info","stopPropagation","positionChanged","element","cardid","cardtarget","targetNextElement","catch","init"],"mappings":"AAwBAA,OAAM,0BACN,CACI,QADJ,CAEI,oBAFJ,CAGI,gCAHJ,CAII,mBAJJ,CAKI,WALJ,CADM,CAQN,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAME,IACMC,CAAAA,CAAS,CAAG,CACZC,OAAO,CAAE,6BADG,CAEZC,IAAI,CAAE,YAFM,CADlB,CAmBMC,CAAQ,CAAG,SAASC,CAAT,CAAe,IAKtBC,CAAAA,CAAO,CAAGN,CAAI,CAACO,IAAL,CAAU,CAJV,CACVC,UAAU,CAAE,qBADF,CAEVH,IAAI,CAAEA,CAFI,CAIU,CAAV,EAAqB,CAArB,CALY,CAM1BC,CAAO,CAACG,IAAR,CAAaV,CAAY,CAACW,SAA1B,EACA,MAAOJ,CAAAA,CACV,CA3BH,CAkCMK,CAAsB,CAAG,SAASC,CAAT,CAAe,IAGpCC,CAAAA,CAAc,CAAGD,CAAI,CAACE,IAAL,CAAUb,CAAS,CAACC,OAApB,CAHmB,CAKpCa,CAAO,CAAGF,CAAc,CAACG,IAAf,CAAoB,cAApB,CAL0B,CAOpCC,CAAa,CAAG,GAAIpB,CAAAA,CAAJ,CAAiBgB,CAAjB,CAAiC,CAACK,mBAAmB,CAAE,mCAAtB,CAAjC,CAPoB,CASxCD,CAAa,CAACE,kBAAd,CAAmC,SAASC,CAAT,CAAwBC,CAAxB,CAAsC,CACrE,GAAI,CAACA,CAAY,CAACC,MAAlB,CAA0B,CACtB,MAAO,aACV,CAFD,IAEO,CACH,MAAO,YACV,CACJ,CAND,CAQAT,CAAc,CAACU,EAAf,CAAkB1B,CAAY,CAAC2B,MAAb,CAAoBC,IAAtC,CAA4C,SAASC,CAAT,CAAYC,CAAZ,CAAkB,CAC1DD,CAAC,CAACE,eAAF,GACA,GAAIvB,CAAAA,CAAJ,CACA,GAAIsB,CAAI,CAACE,eAAT,CAA0B,CACtB,GAAIF,CAAI,CAACG,OAAL,CAAad,IAAb,CAAkB,cAAlB,CAAJ,CAAuC,IAC/Be,CAAAA,CAAM,CAAGJ,CAAI,CAACG,OAAL,CAAad,IAAb,CAAkB,cAAlB,CADsB,CAE/BgB,CAAU,CAAGL,CAAI,CAACM,iBAAL,CAAuBjB,IAAvB,CAA4B,cAA5B,CAFkB,CAGnCX,CAAI,CAAG,CACH0B,MAAM,CAAEA,CADL,CAEHC,UAAU,CAAEA,CAFT,CAGHjB,OAAO,CAAEA,CAHN,CAAP,CAKA,GAAsB,WAAlB,QAAOgB,CAAAA,CAAP,EAA4C,CAAX,GAAAA,CAArC,CAAmD,CAC/C3B,CAAQ,CAACC,CAAD,CAAR,CAAe6B,KAAf,CAAqBnC,CAAY,CAACW,SAAlC,CACH,CACJ,CACJ,CACJ,CAjBD,CAkBH,CArEH,CAgFE,MAAO,CACHyB,IAAI,CANG,QAAPA,CAAAA,IAAO,CAASvB,CAAT,CAAe,CACtB,GAAIA,CAAAA,CAAI,CAAGhB,CAAC,CAACgB,CAAD,CAAZ,CACAD,CAAsB,CAACC,CAAD,CACzB,CAEM,CAGV,CAjGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Thin wrapper for ordering cards\n *\n * @package    mod_swipe\n * @copyright  2021 Cambridge Assessment International Education\n * @author     Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/sortable_list',\n    'core/custom_interaction_events',\n    'core/notification',\n    'core/ajax'\n],\nfunction(\n    $,\n    Sortablelist,\n    CustomEvents,\n    Notification,\n    Ajax\n) {\n    var SELECTORS = {\n        WRAPPER: '[data-region=\"editcards\"]',\n        CARD: '.edit-card',\n    };\n\n    /**\n     * Move a course module.\n     *\n     * @param {Object} args Arguments to pass to webservice\n     *\n     * Valid args are:t\n     * int moduleid      id of module to move\n     * int moduletarget  id of module to position after\n     * int sectionnumber number of section to move module to\n     * int courseid.     id of course this section belongs to\n     *\n     * @return {promise} Resolved with void or array of warnings\n     */\n    var moveCard = function(args) {\n        var request = {\n            methodname: 'mod_swipe_move_card',\n            args: args\n        };\n        var promise = Ajax.call([request])[0];\n        promise.fail(Notification.exception);\n        return promise;\n    };\n\n    /**\n     * Listen to and handle events for routing, showing and hiding the message drawer.\n     *\n     * @param {Object} root The message drawer container.\n     */\n    var registerEventListeners = function(root) {\n\n        // Variables for moving cards.\n        var cardsContainer = root.find(SELECTORS.WRAPPER);\n\n        var swipeid = cardsContainer.attr('data-swipeid');\n\n        var cardsSortable = new Sortablelist(cardsContainer, {moveHandlerSelector: '.movecard > [data-drag-type=move]'});\n\n        cardsSortable.getDestinationName = function(parentElement, afterElement) {\n            if (!afterElement.length) {\n                return 'Top of deck';\n            } else {\n                return 'After next';\n            }\n        };\n\n        cardsContainer.on(Sortablelist.EVENTS.DROP, function(e, info) {\n            e.stopPropagation();\n            var args;\n            if (info.positionChanged) {\n                if (info.element.attr('data-card-id')) {\n                    var cardid = info.element.attr('data-card-id');\n                    var cardtarget = info.targetNextElement.attr('data-card-id');\n                    args = {\n                        cardid: cardid,\n                        cardtarget: cardtarget,\n                        swipeid: swipeid\n                    };\n                    if (typeof cardid !== 'undefined' && cardid !== 0) {\n                        moveCard(args).catch(Notification.exception);\n                    }\n                }\n            }\n        });\n    };\n\n    /**\n     * @method\n     * @param {Object} options\n     */\n    var init = function(root) {\n        var root = $(root);\n        registerEventListeners(root);\n    };\n\n    return {\n        init: init\n    };\n});\n"],"file":"sort_wrapper.min.js"}