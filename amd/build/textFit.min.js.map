{"version":3,"sources":["../src/textFit.js"],"names":["root","factory","define","amd","exports","module","textFit","global","defaultSettings","alignVert","alignHoriz","multiLine","detectMultiLine","minFontSize","maxFontSize","reProcess","widthOnly","alignVertWithFlexbox","els","options","settings","key","hasOwnProperty","toArray","elType","Object","prototype","toString","call","i","length","processItem","el","isElement","getAttribute","setAttribute","innerSpan","originalHeight","originalHTML","originalWidth","low","mid","high","innerHTML","innerWidth","innerHeight","Error","outerHTML","indexOf","document","createElement","className","style","appendChild","querySelector","hasClass","replace","scrollHeight","parseInt","window","getComputedStyle","fontSize","scrollWidth","addStyleSheet","height","clientHeight","getPropertyValue","clientWidth","o","HTMLElement","nodeType","nodeName","element","cls","getElementById","css","type","id","body"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/**\n * textFit v2.3.1\n * Previously known as jQuery.textFit\n * 11/2014 by STRML (strml.github.com)\n * MIT License\n *\n * To use: textFit(document.getElementById('target-div'), options);\n *\n * Will make the *text* content inside a container scale to fit the container\n * The container is required to have a set width and height\n * Uses binary search to fit text with minimal layout calls.\n * Version 2.0 does not use jQuery.\n */\n/*global define:true, document:true, window:true, HTMLElement:true*/\n\n(function(root, factory) {\n  \"use strict\";\n\n  // UMD shim\n  if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // Node/CommonJS\n    module.exports = factory();\n  } else {\n    // Browser\n    root.textFit = factory();\n  }\n\n}(typeof global === \"object\" ? global : this, function () {\n  \"use strict\";\n\n  var defaultSettings = {\n    alignVert: false, // if true, textFit will align vertically using css tables\n    alignHoriz: false, // if true, textFit will set text-align: center\n    multiLine: false, // if true, textFit will not set white-space: no-wrap\n    detectMultiLine: true, // disable to turn off automatic multi-line sensing\n    minFontSize: 6,\n    maxFontSize: 80,\n    reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\n    widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\n    alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\n  };\n\n  return function textFit(els, options) {\n\n    if (!options) options = {};\n\n    // Extend options.\n    var settings = {};\n    for(var key in defaultSettings){\n      if(options.hasOwnProperty(key)){\n        settings[key] = options[key];\n      } else {\n        settings[key] = defaultSettings[key];\n      }\n    }\n\n    // Convert jQuery objects into arrays\n    if (typeof els.toArray === \"function\") {\n      els = els.toArray();\n    }\n\n    // Support passing a single el\n    var elType = Object.prototype.toString.call(els);\n    if (elType !== '[object Array]' && elType !== '[object NodeList]' &&\n            elType !== '[object HTMLCollection]'){\n      els = [els];\n    }\n\n    // Process each el we've passed.\n    for(var i = 0; i < els.length; i++){\n      processItem(els[i], settings);\n    }\n  };\n\n  /**\n   * The meat. Given an el, make the text inside it fit its parent.\n   * @param  {DOMElement} el       Child el.\n   * @param  {Object} settings     Options for fit.\n   */\n  function processItem(el, settings){\n    if (!isElement(el) || (!settings.reProcess && el.getAttribute('textFitted'))) {\n      return false;\n    }\n\n    // Set textFitted attribute so we know this was processed.\n    if(!settings.reProcess){\n      el.setAttribute('textFitted', 1);\n    }\n\n    var innerSpan, originalHeight, originalHTML, originalWidth;\n    var low, mid, high;\n\n    // Get element data.\n    originalHTML = el.innerHTML;\n    originalWidth = innerWidth(el);\n    originalHeight = innerHeight(el);\n\n    // Don't process if we can't find box dimensions\n    if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\n      if(!settings.widthOnly)\n        throw new Error('Set a static height and width on the target element ' + el.outerHTML +\n          ' before using textFit!');\n      else\n        throw new Error('Set a static width on the target element ' + el.outerHTML +\n          ' before using textFit!');\n    }\n\n    // Add textFitted span inside this container.\n    if (originalHTML.indexOf('textFitted') === -1) {\n      innerSpan = document.createElement('span');\n      innerSpan.className = 'textFitted';\n      // Inline block ensure it takes on the size of its contents, even if they are enclosed\n      // in other tags like <p>\n      innerSpan.style['display'] = 'inline-block';\n      innerSpan.innerHTML = originalHTML;\n      el.innerHTML = '';\n      el.appendChild(innerSpan);\n    } else {\n      // Reprocessing.\n      innerSpan = el.querySelector('span.textFitted');\n      // Remove vertical align if we're reprocessing.\n      if (hasClass(innerSpan, 'textFitAlignVert')){\n        innerSpan.className = innerSpan.className.replace('textFitAlignVert', '');\n        innerSpan.style['height'] = '';\n        el.className.replace('textFitAlignVertFlex', '');\n      }\n    }\n\n    // Prepare & set alignment\n    if (settings.alignHoriz) {\n      el.style['text-align'] = 'center';\n      innerSpan.style['text-align'] = 'center';\n    }\n\n    // Check if this string is multiple lines\n    // Not guaranteed to always work if you use wonky line-heights\n    var multiLine = settings.multiLine;\n    if (settings.detectMultiLine && !multiLine &&\n        innerSpan.scrollHeight >= parseInt(window.getComputedStyle(innerSpan)['font-size'], 10) * 2){\n      multiLine = true;\n    }\n\n    // If we're not treating this as a multiline string, don't let it wrap.\n    if (!multiLine) {\n      el.style['white-space'] = 'nowrap';\n    }\n\n    low = settings.minFontSize + 1;\n    high = settings.maxFontSize + 1;\n\n    // Binary search for best fit\n    while (low <= high) {\n      mid = parseInt((low + high) / 2, 10);\n      innerSpan.style.fontSize = mid + 'px';\n      if(innerSpan.scrollWidth <= originalWidth && (settings.widthOnly || innerSpan.scrollHeight <= originalHeight)){\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    }\n    // Sub 1 at the very end, this is closer to what we wanted.\n    innerSpan.style.fontSize = (mid - 1) + 'px';\n\n    // Our height is finalized. If we are aligning vertically, set that up.\n    if (settings.alignVert) {\n      addStyleSheet();\n      var height = innerSpan.scrollHeight;\n      if (window.getComputedStyle(el)['position'] === \"static\"){\n        el.style['position'] = 'relative';\n      }\n      if (!hasClass(innerSpan, \"textFitAlignVert\")){\n        innerSpan.className = innerSpan.className + \" textFitAlignVert\";\n      }\n      innerSpan.style['height'] = height + \"px\";\n      if (settings.alignVertWithFlexbox && !hasClass(el, \"textFitAlignVertFlex\")) {\n        el.className = el.className + \" textFitAlignVertFlex\";\n      }\n    }\n  }\n\n  // Calculate height without padding.\n  function innerHeight(el){\n    var style = window.getComputedStyle(el, null);\n    return el.clientHeight -\n      parseInt(style.getPropertyValue('padding-top'), 10) -\n      parseInt(style.getPropertyValue('padding-bottom'), 10);\n  }\n\n  // Calculate width without padding.\n  function innerWidth(el){\n    var style = window.getComputedStyle(el, null);\n    return el.clientWidth -\n      parseInt(style.getPropertyValue('padding-left'), 10) -\n      parseInt(style.getPropertyValue('padding-right'), 10);\n  }\n\n  //Returns true if it is a DOM element\n  function isElement(o){\n    return (\n      typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n      o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName===\"string\"\n    );\n  }\n\n  function hasClass(element, cls) {\n    return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\n  }\n\n  // Better than a stylesheet dependency\n  function addStyleSheet() {\n    if (document.getElementById(\"textFitStyleSheet\")) return;\n    var style = [\n      \".textFitAlignVert{\",\n        \"position: absolute;\",\n        \"top: 0; right: 0; bottom: 0; left: 0;\",\n        \"margin: auto;\",\n        \"display: flex;\",\n        \"justify-content: center;\",\n        \"flex-direction: column;\",\n      \"}\",\n      \".textFitAlignVertFlex{\",\n        \"display: flex;\",\n      \"}\",\n      \".textFitAlignVertFlex .textFitAlignVert{\",\n        \"position: static;\",\n      \"}\",].join(\"\");\n\n    var css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.id = \"textFitStyleSheet\";\n    css.innerHTML = style;\n    document.body.appendChild(css);\n  }\n}));\n/* eslint-enable */"],"file":"textFit.min.js"}